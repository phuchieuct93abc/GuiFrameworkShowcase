<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:ic="http://ivyteam.ch/jsf/component"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:pm="http://primefaces.org/mobile"
	xmlns:gui="http://axonivy.com/gui/components"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">
<h:body>
	<ui:composition template="/layouts/basic.xhtml">

		<ui:define name="desciption">



<p>
Component Context JSF Bean
As the baseWorkflow and componentContext are no longer stored in the dialog data class you can't access it as before.
A jsf bean was added to access the component context. For example:
<pre class="brush:xml">
&lt;h:panelGroup rendered=&quot;\#{componentCtx.displayMode}&quot;&gt;
</pre>

 
To get it in a java class/ivy script step you can use the ch.axonivy.fintech.eintech.DialogContextHolder class. To get the baseWorkflow or componentContext you have to use the dialog data as parameter. For example:
<pre class="brush: java">
import ch.axonivy.fintech.standard.guiframework.bean.ComponentContext;
import ch.axonivy.fintech.standard.guiframework.workflow.BaseGuiWorkflow;
 
import ch.axonivy.fintech.eintech.DialogContextHolder;
 
// in is the dialog data class
BaseGuiWorkflow baseWorkflow = DialogContextHolder.getInstance().getWorkflow(in);
ComponentContext componentContext = DialogContextHolder.getInstance().getComponentContext(in);
</pre>



</p>



		</ui:define>




	</ui:composition>
</h:body>
</html>